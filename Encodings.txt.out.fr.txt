Avant le début des années 1960, les ordinateurs ont été principalement utilisés pour le numéro-croquer plutôt que pour le texte, et de la mémoire était extrêmement cher. Ordinateurs souvent attribués seulement 6 bits pour chaque caractère, permettant seulement 64  characters- "attribuer des codes pour AZ, az, et 0-9 laisserait seulement deux codes: loin d';être suffisant. La plupart des ordinateurs ont choisi de ne pas soutenir des lettres minuscules. Ainsi, les projets de texte premières tels que l';indice Thomisticus, le Brown Corpus, et d';autres de Roberto Busa ont dû recourir à des conventions telles que la saisie d';un astérisque lettres effectivement destinés à être supérieur cas précédent.Fred Brooks d';IBM a plaidé avec force pour aller à octets de 8 bits, parce que les gens de someday pourraient vouloir traiter le texte; et a gagné. Bien que IBM EBCDIC utilisé, la plupart des textes à partir de là est venu à être codé en ASCII, en utilisant des valeurs de 0 à 31 pour les caractères (sans impression) contrôle, et des valeurs de 32 à 127 pour les caractères graphiques tels que des lettres, chiffres et signes de ponctuation. La plupart des machines stockées caractères sur 8 bits plutôt que sept, en ignorant le bit restant ou de l';utiliser comme une somme de contrôle.La quasi-omniprésence de ASCII était d';une grande aide, mais n';a pas réussi à répondre aux préoccupations internationales et linguistiques. Le signe dollar («$») ne était pas si utile en Angleterre, et les caractères accentués utilisés en espagnol, Français, allemand, et bien d';autres langues étaient entièrement disponible en ASCII (pour ne pas mentionner les caractères utilisés en grec, russe, et la plupart des langues de l';Est). Beaucoup de personnes, de sociétés, et les pays définis comme des caractères supplémentaires needed-  «souvent réaffectation des caractères de contrôle, ou en utilisant la valeur dans la gamme de 128 à 255. Utilisation des valeurs supérieures à 128 conflits avec l';aide de la 8ème bit comme une somme de contrôle, mais l';utilisation de la somme de contrôle progressivement disparu.Ces caractères supplémentaires ont été codés différemment en différents pays, ce qui rend les textes impossibles à décoder sans avoir les règles de l';initiateur. Par exemple, un navigateur peut afficher Â¬A plutôt que `si elle essayait d';interpréter un personnage défini comme une autre. L';Organisation internationale pour Normalisation (ISO) plusieurs pages de code par la suite développé selon la norme ISO 8859, pour accueillir différentes langues. Latines Le premier d';entre eux (ISO 8859-1) est également connu comme "Latin-1", et couvre les besoins de la plupart (pas tous) qui utilisent les langues européennes caractères (il n';y avait pas assez de place pour les couvrir tous). ISO 2022 alors fourni conventions pour "commutation" entre les différents jeux de caractères à la mi-fichier. Beaucoup d';autres organisations ont élaboré sur ces variations, et pour de nombreuses années Windows et Ordinateurs Macintosh utilisés variations incompatibles.La situation de codage de texte est devenu de plus en plus complexe, ce qui conduit aux efforts déployés par l';ISO et par le Consortium Unicode pour développer un seul, l';encodage unifié qui pourrait couvrir tous connus (ou au moins tous actuellement connu) langues. Après un conflit, [citation nécessaire] ces efforts ont été unifiés. Unicode permet actuellement 1.114.112 valeurs de code, et assigne des codes couvrant presque tous les systèmes d';écriture de texte modernes, ainsi que de nombreux sites historiques ceux et pour de nombreux personnages non-linguistiques tels que les Symboles de l';imprimante, les symboles mathématiques, etc.Le texte est considéré comme texte brut indépendamment de son encodage. Pour bien comprendre ou processus, il doit connaître le destinataire (ou être en mesure de comprendre) ce codage a été utilisé; Cependant, ils doivent savent rien de l';architecture de l';ordinateur qui a été utilisé, ou sur les structures binaires définis par ne importe quel programme (le cas échéant) ont créé les données. 